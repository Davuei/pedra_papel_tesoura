const player = document.getElementById("player-result"); // div com o campo do jogador
const computer = document.getElementById("computer-result"); // div com o campo do computador
const choices = Array.from(document.getElementsByClassName("choice")); // Array com as escolhas de gestos poss√≠veis
const divChoices = document.getElementById("div-choices"); // div contendo as escolhas dos gestos poss√≠veis
const msg = document.getElementById("span-title"); // span com uma mensagem
const winningStreak = document.getElementById("winning-streak"); // span que mostra a sequ√™ncia de vit√≥rias
const bestStreak = document.getElementById("best-streak"); // span que mostra a melhor sequ√™ncia de vit√≥rias

// Fun√ß√£o que gera um n√∫mero aleat√≥rio para ser a jogada do computador
function computerChoice(){
    return Math.floor(Math.random() * 3 + 1);
}

// Fun√ß√£o que retorna o emoji de acordo com o n√∫mero recebido
function getEmoji(num){
    if(num == 1)
        return "‚úä";
    else if(num == 2)
        return "üñê";
    else if(num == 3)
        return "‚úå";
    else if(num == 4)
        return "üôå";
    else
        return "üëè";
}

// Fun√ß√£o que retorna vit√≥ria, derrota ou impate, comparando as escolhas do jogador e do computador
function checkWinner(playerGesture, computerGesture){
    if(playerGesture == 1){
        if(computerGesture == 3)
            return "win";
        else if(computerGesture == 2)
            return "lose";
        else
            return "draw";
    }else if(playerGesture == 2){
        if(computerGesture == 1)
            return "win";
        else if(computerGesture == 3)
            return "lose";
        else
            return "draw";
    }else{
        if(computerGesture == 2)
            return "win";
        else if(computerGesture == 1)
            return "lose";
        else
            return "draw";
    }
}

// Fun√ß√£o que atualiza os valores da sequ√™ncia de vit√≥rias e da melhor sequ√™ncia de vit√≥rias
function updateStreak(win){
    if (win){
        winningStreak.innerText++; // Atualiza a sequ√™ncia de vit√≥rias
        if(winningStreak.innerText > bestStreak.innerText){
            bestStreak.innerText = winningStreak.innerText; // Atualiza a melhor sequ√™ncia de vit√≥rias
            localStorage.setItem("bestWinningStreak", bestStreak.innerText); // Salva localmente a melhor sequ√™ncia de vit√≥rias
        }
    }else
        winningStreak.innerText = 0;
}

// Fun√ß√£o que aplica as anima√ß√µes de vit√≥ria e derrota
function matchResultAnimations(result){
    setTimeout(() => {
        player.classList.remove("playing"); // Remove a anima√ß√£o de jogando ao campo do jogador
        computer.classList.remove("playing"); // Remove a anima√ß√£o de jogando ao campo do computador
        divChoices.style.visibility = "visible"; // Mostra novamente as escolhas de gestos

        if(result == "win"){
            player.classList.add("winner");
            computer.classList.add("loser");
            player.innerHTML = getEmoji(4);
            computer.innerHTML = getEmoji(5);
        }else if(result == "lose"){
            player.classList.add("loser");
            computer.classList.add("winner");
            player.innerHTML = getEmoji(5);
            computer.innerHTML = getEmoji(4);
        }else{
            //faz alguma coisa aki kk
        }
    }, 800);
}

// Fun√ß√£o que adiciona e remove as anima√ß√µes das jogadas, altera a mensagem do jogo e esconde as op√ß√µes de gestos durante o jogo
function playing(pc, cc){
    player.classList.add("playing"); // Adiciona a anima√ß√£o de jogando ao campo do jogador
    computer.classList.add("playing"); // Adiciona a anima√ß√£o de jogando ao campo do computador
    player.innerHTML = computer.innerHTML = "‚úä";

    divChoices.style.visibility = "hidden"; // Esconde as escolhas de gestos

    msg.innerHTML = ""; // Esconde a mensagem

    setTimeout(() => {
        player.innerHTML = getEmoji(pc); // Altera a imagem do campo do jogador para a sua escolha
        computer.innerHTML = getEmoji(cc); // Altera a imagem do campo do computador para a escolha dele
        let result = checkWinner(pc, cc); // Recebe quem ganhou
        if(result == "win"){
            msg.innerHTML = "VIT√ìRIA!!";
            updateStreak(true);
            matchResultAnimations(result);
        }else if(result == "lose"){
            msg.innerHTML = "Ops... Tente novamente!";
            updateStreak(false);
            matchResultAnimations(result);
        }else
            msg.innerHTML = "Empate!";
            matchResultAnimations(result);
    }, 1200);
}

// Fun√ß√£o que permite a sele√ß√£o do gesto do jogador
choices.forEach(c => {
    c.addEventListener("click", (e) => {
        player.classList.remove("winner", "loser");
        computer.classList.remove("winner", "loser");

        let pc = e.target.dataset.gesture; // "PlayerChoice", √© a escolha do jogador
        let cc = computerChoice(); // "ComputerChoice", √© a escolha do computador

        playing(pc, cc); // Chama a fun√ß√£o da jogada 
    })
})

//Fun√ß√£o para carregar algumas configura√ß√µes iniciais do jogo
function initialConfig(){
    bestStreak.innerText = localStorage.getItem("bestWinningStreak"); // Carrega a melhor sequ√™ncia de vit√≥rias do localStorage
}

//Chama a fun√ß√£o para carregar as configura√ß√µes iniciais
initialConfig();

/*
    winning streak
    easter egg para 10 vit√≥rias seguidas
    m√∫sica (volume, mutar, trocar m√∫sica)
    fundo de acordo com a m√∫sica
    anima√ß√µes (gestos, confete)
    frases din√¢micas
*/